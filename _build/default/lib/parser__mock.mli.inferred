type token =
    WHILE
  | VOID
  | SEMI
  | RPAREN
  | RETURN
  | RBRACE
  | PLUS
  | OR
  | NUMBER of int
  | NOT
  | NEQ
  | MUL
  | MOD
  | MINUS
  | LT
  | LPAREN
  | LEQ
  | LBRACE
  | INT
  | IF
  | ID of string
  | GT
  | GEQ
  | EQ
  | EOF
  | ELSE
  | DIV
  | CONTINUE
  | COMMA
  | BREAK
  | ASSIGN
  | AND
val menhir_begin_marker : int
val xv_unary_op : Ast.unary_op
val xv_unary_expr : Ast.expr
val xv_stmt_list : Ast.stmt list
val xv_stmt : Ast.stmt
val xv_separated_nonempty_list_COMMA_param_ : Ast.param list
val xv_separated_nonempty_list_COMMA_expr_ : Ast.expr list
val xv_rel_op : Ast.bin_op
val xv_rel_expr : Ast.expr
val xv_primary_expr : Ast.expr
val xv_param_list : Ast.param list
val xv_param : Ast.param
val xv_mul_op : Ast.bin_op
val xv_mul_expr : Ast.expr
val xv_lor_expr : Ast.expr
val xv_list_stmt_ : Ast.stmt list
val xv_list_func_def_ : Ast.comp_unit
val xv_land_expr : Ast.expr
val xv_func_def : Ast.func_def
val xv_expr_list : Ast.expr list
val xv_expr : Ast.expr
val xv_comp_unit : Ast.comp_unit
val xv_block : Ast.block
val xv_add_op : Ast.bin_op
val xv_add_expr : Ast.expr
val menhir_end_marker : int
